{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/tabs/tabs.ts","../../src/pages/home/home.ts","../../src/pages/contact/contact.ts","../../src/pages/login/login.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/pages/about/about.ts"],"names":[],"mappings":";;;;;AAAA;AACA,+CAA+C,wDAAwD,EAAE;AACzG;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,6B;;;;;;;;;;;;;;;;;;;;AClB0C;AACF;AAOxC,IAAa,QAAQ;IAKnB;IAEA,CAAC;IAND,sBAAI,8BAAQ;aAAZ;YACE,MAAM,CAAC,4DAAQ,CAAC;QAClB,CAAC;;;OAAA;IAKH,eAAC;AAAD,CAAC;AARY,QAAQ;IALpB,wEAAS,CAAC;QACT,QAAQ,EAAE,mDAET;KACF,CAAC;;GACW,QAAQ,CAQpB;AARoB;;;;;;;;;;;;;;;;;;;;;;;;;ACRqB;AACI;AAChB;AACU;AAQS;AAEjD,IAAM,KAAK,0KAAM,mJAUhB,GAVa,mDAAG,KAUhB,CAAC;AAuBF,IAAa,QAAQ;IAInB,kBACS,OAAsB,EACrB,MAAc;QADf,YAAO,GAAP,OAAO,CAAe;QACrB,WAAM,GAAN,MAAM,CAAQ;QAEtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAa,EAAE,KAAK,SAAE,CAAC;aACnD,GAAG,CAAC,UAAC,EAAQ;gBAAN,cAAI;YAAO,WAAI,CAAC,QAAQ;QAAb,CAAa,CAAC,CAAC;IACtC,CAAC;IAED,6BAAU,GAAV,UAAW,IAAyB;QAClC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qEAAW,EAAE,EAAE,IAAI,QAAE,CAAC,CAAC;IAC3C,CAAC;IACH,eAAC;AAAD,CAAC;AAfY,QAAQ;IArBpB,wEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE,6mBAiBT;KACF,CAAC;qCAMkB,oEAAa;QACb,8DAAM;GANb,QAAQ,CAepB;AAfoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CmD;AAQjD;AACiB;AACV;AAGmB;AACM;AAEvD,IAAM,cAAc,yPAAM,kOAWxB,GAXqB,mDAAG,KAWxB,CAAC;AAEH,IAAM,YAAY,sOAAM,+MAatB,GAbmB,mDAAG,KAatB,CAAC;AAEH,IAAM,WAAW,sJAAM,+HAKrB,GALkB,mDAAG,KAKrB,CAAC;AAwCH,IAAa,WAAW;IAMtB,qBACS,OAAsB,EACrB,SAAoB,EACpB,SAA0B,EAC1B,MAAc;QAHf,YAAO,GAAP,OAAO,CAAe;QACrB,cAAS,GAAT,SAAS,CAAW;QACpB,cAAS,GAAT,SAAS,CAAiB;QAC1B,WAAM,GAAN,MAAM,CAAQ;QAPxB,iBAAY,GAAG,IAAI,+DAAY,EAAE,CAAC;IASlC,CAAC;IAED,+BAAS,GAAT;QACE,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAC1E,KAAK,CAAC,YAAY,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CAAC;QACxC,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAED,8BAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACrC,IAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAsB,EAAE,KAAK,EAAE,cAAc,EAAE,WAAW,EAAE,cAAc,EAAE,CAAC,CAAC;QACvH,IAAM,OAAO,GAAG,IAAI,qEAAe,CAAyB,IAAI,CAAC,CAAC;QAClE,IAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,CAAuC,CAAC;QACzG,eAAe,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,CAAC,WAAW,EAArB,CAAqB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,kBAAQ;YAClF,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAnB,CAAmB,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG,EAAE,OAAO;gBACtE,MAAM,CAAC,OAAO,IAAI,OAAO,SAAK,GAAG,IAAI,GAAG,CAAC;YAC3C,CAAC,EAAE,QAAQ,CAAC,CAAC;QACf,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,WAAC,IAAI,cAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAf,CAAe,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,iCAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAEH,kBAAC;AAAD,CAAC;AArCY,WAAW;IAtCvB,wEAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,QAAQ,EAAE,wwCAkCT;KACF,CAAC;qCAQkB,oEAAa;QACV,gEAAS;QACT,sEAAe;QAClB,8DAAM;GAVb,WAAW,CAqCvB;AArCuB;AA8DxB,IAAa,eAAe;IAK1B,yBACU,MAAc,EACf,QAAkB,EAClB,SAAoB,EACpB,QAAwB;QAHvB,WAAM,GAAN,MAAM,CAAQ;QACf,aAAQ,GAAR,QAAQ,CAAU;QAClB,cAAS,GAAT,SAAS,CAAW;QACpB,aAAQ,GAAR,QAAQ,CAAgB;QANjC,SAAI,GAAW,EAAE,CAAC;IAOd,CAAC;IAEL,wCAAc,GAAd;QAAA,iBAEC;QADC,UAAU,CAAC,cAAM,YAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAxB,CAAwB,EAAE,GAAG,CAAC,CAAC;IAClD,CAAC;IAED,gCAAM,GAAN;QAAA,iBAeC;QAdC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAAC,MAAM,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAsB;YACtC,QAAQ,EAAE,WAAW;YACrB,SAAS,EAAE;gBACT,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,IAAI;gBACjD,IAAI,EAAE,IAAI,CAAC,IAAI;aACgB;SAClC,CAAC,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,WAAC;YACpB,IAAM,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC;YAC1C,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;gBACpB,MAAM,EAAE,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACpC,IAAI,EAAE,KAAI,CAAC,IAAI;aAChB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAO,GAAP;QACE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IACH,sBAAC;AAAD,CAAC;AAlCuB;IAArB,0EAAS,CAAC,SAAS,CAAC;8BAAW,gEAAS;iDAAC;AAF/B,eAAe;IAvB3B,wEAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,QAAQ,EAAE,2jBAmBT;KACF,CAAC;qCAOkB,8DAAM;QACL,+DAAQ;QACP,gEAAS;QACV,qEAAc;GATtB,eAAe,CAoC3B;AApC2B;;;;;;;;;;;;;;;;;;;;;;ACvJc;AAC0B;AAiBpE,IAAa,SAAS;IAEpB,mBACS,OAAsB,EAAS,SAAoB;QAAnD,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;IAG5D,CAAC;IAED,kCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IAC1C,CAAC;IAEH,gBAAC;AAAD,CAAC;AAZY,SAAS;IAfrB,wEAAS,EAAE;IACX,wEAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,WAAW,EAAE,YAAY;OAUxB;KACF,CAAC;cAI4D;AAS7D;SAZY,SAAS,e;;;;;;;;;;;;;;;;;;;;;;;AClBG;AACO;AACU;AACX;AACC;AACK;AAEsC;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXG;AACG;AACe;AACjC;AAES;AACuB;AAC1B;AACA;AACG;AAEI;AACM;AAEU;AACoB;AAC3C;AACoB;AAE3D,IAAM,QAAQ,GAAG,IAAI,+EAAkB,CAAC,4EAA4E,EAAE;IAC3H,SAAS,EAAE,IAAI;CAChB,CAAC,CAAC;AACI,IAAM,gBAAgB,GAAG,sFAAsB,CAAC;IACrD,GAAG,EAAE,4DAA4D;CAClE,CAAC,CAAC;AAEI,IAAM,MAAM,GAAG,IAAI,oEAAY,CAAC;IACrC,gBAAgB,EAAE,UAAC,CAAM,IAAK,QAAC,CAAC,EAAE,EAAJ,CAAI;IAClC,gBAAgB,EAAE,4FAAuB,CAAC,gBAAgB,EAAE,QAAQ,CAAC;CACtE,CAAC,CAAC;AAEG;IACJ,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC;AAEM,IAAM,aAAa,GAAkB;IAC1C,IAAI,EAAE;QACJ,MAAM,EAAE,UAAU;KACnB;CACF,CAAC;AAuCF,IAAa,SAAS;IAAtB;IAAwB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAZ,SAAS;IArCrB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,6DAAK;YACL,qEAAS;YACT,2EAAW;YACX,kEAAQ;YACR,kEAAQ;YACR,qEAAS;YACT,+EAAe;SAChB;QACD,OAAO,EAAE;YACP,gFAAa;YACb,kEAAW,CAAC,OAAO,CAAC,6DAAK,EAAE,EAAE,EACjC;gBACE,KAAK,EAAE;oBACL,EAAE,YAAY,EAAE,6CAA6C,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;iBAC1I;aACF,CAAC;YACE,qEAAY,CAAC,OAAO,CAAC,aAAa,CAAC;YACnC,0EAAW,CAAC,OAAO,CAAC,aAAa,CAAC;SACnC;QACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;QACrB,eAAe,EAAE;YACf,6DAAK;YACL,qEAAS;YACT,2EAAW;YACX,kEAAQ;YACR,kEAAQ;YACR,qEAAS;YACT,+EAAe;SAChB;QACD,SAAS,EAAE;YACT,2EAAS;YACT,kFAAY;YACZ,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC;SACrD;KACF,CAAC;GACW,SAAS,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AC9EoB;AACD;AACY;AACM;AAEb;AAK9C,IAAa,KAAK;IAGhB,eAAY,QAAkB,EAAE,SAAoB,EAAE,YAA0B;QAFhF,aAAQ,GAAO,kEAAQ,CAAC;QAGtB,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,gEAAgE;YAChE,iEAAiE;YACjE,SAAS,CAAC,YAAY,EAAE,CAAC;YACzB,YAAY,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IACH,YAAC;AAAD,CAAC;AAXY,KAAK;IAHjB,wEAAS,CAAC;OACc;KACxB,CAAC;UAIgF;AAQjF;SAXY,KAAK,2B;;;;;;;;;;;;;;;;;;;;ACVwB;AACI;AAM9C,IAAa,SAAS;IAEpB,mBAAmB,OAAsB;QAAtB,YAAO,GAAP,OAAO,CAAe;IAEzC,CAAC;IAEH,gBAAC;AAAD,CAAC;AANY,SAAS;IAJrB,wEAAS,CAAC;QACT,QAAQ,EAAE,YAAY;OACG;KAC1B,CAAC;cAGyC;AAI1C;SANY,SAAS,e","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 212;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 212\n// module chunks = 1","var map = {\n\t\"../pages/login/login.module\": [\n\t\t952,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nmodule.exports = webpackAsyncContext;\nwebpackAsyncContext.id = 254;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 254\n// module chunks = 1","import { Component } from '@angular/core';\nimport { HomePage } from '../home/home';\n\n@Component({\n  template: `\n    <ion-nav [root]=\"rootPage\"></ion-nav>\n  `,\n})\nexport class TabsPage {\n  get rootPage() {\n    return HomePage;\n  }\n\n  constructor() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport gql from 'graphql-tag';\nimport { Apollo } from 'apollo-angular';\nimport {\n  UsersQuery,\n  UserSummaryFragment,\n  UserDetalQuery,\n  UserDetalQueryVariables,\n} from '../../__generated__';\nimport { Observable } from 'rxjs/Observable';\nimport { ContactPage } from \"../contact/contact\";\n\nconst query = gql`\n  fragment UserSummary on User {\n    id, name, avatar,\n  }\n\n  query Users {\n    allUsers(last: 100) {\n      ...UserSummary,\n    }\n  }\n`;\n\n@Component({\n  selector: 'page-home',\n  template: `\n    <ion-header>\n      <ion-navbar>\n        <ion-title>だれ？</ion-title>\n      </ion-navbar>\n    </ion-header>\n    <ion-content>\n      <ion-list>\n        <button ion-item *ngFor=\"let user of users$ | async\" (click)=\"selectUser(user)\">\n          <ion-avatar>\n            <img [src]=\"user.avatar\" *ngIf=\"user.avatar\">\n            <ion-icon name=\"contact\" [style.color]=\"'#F0F0F0'\" [style.fontSize.px]=\"38\" *ngIf=\"!user.avatar\"></ion-icon>\n            <span class=\"name\">{{user.name}}</span>\n          </ion-avatar>\n        </button>\n      </ion-list>\n    </ion-content>\n  `,\n})\nexport class HomePage {\n\n  users$: Observable<UserSummaryFragment[]>;\n\n  constructor(\n    public navCtrl: NavController,\n    private apollo: Apollo,\n  ) {\n    this.users$ = this.apollo.query<UsersQuery>({ query })\n      .map(({ data }) => data.allUsers);\n  }\n\n  selectUser(user: UserSummaryFragment) {\n    this.navCtrl.push(ContactPage, { user });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  ModalController,\n  Platform,\n  NavParams,\n  ViewController,\n  TextInput\n} from 'ionic-angular';\nimport { Apollo } from 'apollo-angular';\nimport gql from 'graphql-tag';\nimport { AddMessageSubscription, LatestMessagesQuery, PostMessageMutation, PostMessageMutationVariables, MsgDetailFragment, UserSummaryFragment } from '../../__generated__';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nconst latestMessages = gql`\nfragment MsgDetail on Message {\n  id, createdAt, body, updatedAt, createdAt,\n  author {\n    id, name, avatar\n  }\n}\nquery LatestMessages {\n  allMessages(last: 20, orderBy: createdAt_DESC) {\n    ...MsgDetail,\n  }\n}`;\n\nconst onAddMessage = gql`\nsubscription AddMessage {\n  Message(\n    filter: {}\n  ) {\n    mutation,\n    node {\n      id, createdAt, body, updatedAt, createdAt,\n      author {\n        id, name, avatar\n      }\n    }\n  }\n}`;\n\nconst postMessage = gql`\nmutation PostMessage($body: String!, $authorId: ID) {\n  createMessage(body: $body, authorId: $authorId) {\n    id,\n  }\n}`;\n\n@Component({\n  selector: 'page-contact',\n  template: `\n    <ion-header>\n      <ion-navbar>\n        <ion-title>Timeline</ion-title>\n        <ion-buttons end>\n          <button ion-button (click)=\"openModal()\">\n            <span ion-text color=\"primary\">Add</span>\n          </button>\n        </ion-buttons>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content>\n      <ng-container *ngIf=\"message$\">\n        <ion-card *ngFor=\"let message of message$ | async\">\n          <ion-item *ngIf=\"message.author\">\n            <ion-avatar item-start>\n              <img [src]=\"message.author.avatar\" *ngIf=\"message.author?.avatar\">\n              <ion-icon name=\"contact\" [style.color]=\"'#F0F0F0'\" [style.fontSize.px]=\"38\" *ngIf=\"!message.author.avatar\"></ion-icon>\n            </ion-avatar>\n            <h3>{{message.author.name}}</h3>\n          </ion-item>\n          <ion-item *ngIf=\"!message.author\">\n            <ion-avatar item-start>\n              <ion-icon name=\"ionitron\" [style.color]=\"'#488aff'\" [style.fontSize.px]=\"38\"></ion-icon>\n            </ion-avatar>\n            <h3>(anonymous user)</h3>\n          </ion-item>\n          <ion-card-content>\n            <p>{{message.body}}</p>\n          </ion-card-content>\n        </ion-card>\n      </ng-container>\n    </ion-content>\n  `,\n})\nexport class ContactPage implements OnInit, OnDestroy {\n\n  me: UserSummaryFragment;\n  subscription = new Subscription();\n  message$: Observable<MsgDetailFragment[]>;\n\n  constructor(\n    public navCtrl: NavController,\n    private navParams: NavParams,\n    private modalCtrl: ModalController,\n    private apollo: Apollo,\n  ) {\n  }\n\n  openModal() {\n    const modal = this.modalCtrl.create(NewMessageModal, { author: this.me });\n    modal.onDidDismiss(x => console.log(x));\n    modal.present();\n  }\n\n  ngOnInit() {\n    this.me = this.navParams.get('user');\n    const latestMessages$ = this.apollo.query<LatestMessagesQuery>({ query: latestMessages, fetchPolicy: 'network-only' });\n    const subject = new BehaviorSubject<AddMessageSubscription>(null);\n    const addMessage$ = this.apollo.subscribe({ query: onAddMessage }) as Observable<AddMessageSubscription>;\n    latestMessages$.map(msgs => msgs.data.allMessages).take(1).toPromise().then(messages => {\n      this.message$ = subject.map(x => x && x.Message.node).scan((acc, message) => {\n        return message ? [message, ...acc] : acc;\n      }, messages);\n    });\n    this.subscription.add(addMessage$.subscribe(x => subject.next(x)));\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n\n@Component({\n  selector: 'new-message-modal',\n  template: `\n  <ion-header>\n    <ion-toolbar>\n      <ion-buttons start>\n        <button ion-button (click)=\"dismiss()\">\n          <span ion-text color=\"primary\">Cancel</span>\n        </button>\n      </ion-buttons>\n      <ion-title>New Message</ion-title>\n      <ion-buttons end>\n        <button ion-button (click)=\"submit()\">\n          <span ion-text color=\"primary\">Submit</span>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-header>\n  <ion-content>\n    <ion-textarea #message [(ngModel)]=\"text\"></ion-textarea>\n  </ion-content>\n  `\n})\nexport class NewMessageModal {\n\n  @ViewChild('message') textArea: TextInput;\n  text: string = \"\";\n\n  constructor(\n    private apollo: Apollo,\n    public platform: Platform,\n    public navParams: NavParams,\n    public viewCtrl: ViewController,\n  ) { }\n\n  ionViewDidLoad() {\n    setTimeout(() => this.textArea.setFocus(), 200);\n  }\n\n  submit() {\n    if (!this.text.length) return;\n    this.apollo.mutate<PostMessageMutation>({\n      mutation: postMessage,\n      variables: {\n        authorId: this.navParams.get('author').id || null,\n        body: this.text,\n      } as PostMessageMutationVariables\n    }).first().subscribe(x => {\n      const createdId = x.data.createMessage.id;\n      this.viewCtrl.dismiss({\n        author: this.navParams.get('author'),\n        body: this.text,\n      });\n    });\n  }\n\n  dismiss() {\n    this.viewCtrl.dismiss();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/contact.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n  template: `\n    <ion-header>\n      <ion-navbar>\n        <ion-title>login</ion-title>\n      </ion-navbar>\n    </ion-header>\n    <ion-content padding>\n      <button (click)=\"login()\">aaaaaaaaaaaa</button>\n    </ion-content>\n  `,\n})\nexport class LoginPage {\n\n  constructor(\n    public navCtrl: NavController, public navParams: NavParams,\n  ) {\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad LoginPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import \"rxjs/Observable\";\nimport \"rxjs/add/operator/take\";\nimport \"rxjs/add/operator/withLatestFrom\";\nimport \"rxjs/add/operator/map\";\nimport \"rxjs/add/operator/scan\";\nimport \"rxjs/add/operator/switchMap\";\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\n\nimport { AboutPage } from '../pages/about/about';\nimport { ContactPage, NewMessageModal } from '../pages/contact/contact';\nimport { HomePage } from '../pages/home/home';\nimport { TabsPage } from '../pages/tabs/tabs';\nimport { LoginPage } from '../pages/login/login';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { ApolloClient, createNetworkInterface } from 'apollo-client';\nimport { SubscriptionClient, addGraphQLSubscriptions } from 'subscriptions-transport-ws';\nimport { ApolloModule } from 'apollo-angular';\nimport { CloudSettings, CloudModule } from '@ionic/cloud-angular';\n\nexport const wsClient = new SubscriptionClient('wss://subscriptions.ap-northeast-1.graph.cool/v1/cj5w8vqez05b50105pzg1erpt', {\n  reconnect: true,\n});\nexport const networkInterface = createNetworkInterface({\n  uri: 'https://api.graph.cool/simple/v1/cj5w8vqez05b50105pzg1erpt',\n});\n\nexport const client = new ApolloClient({\n  dataIdFromObject: (x: any) => x.id,\n  networkInterface: addGraphQLSubscriptions(networkInterface, wsClient),\n});\n\nexport function provideClient(): ApolloClient {\n  return client;\n}\n\nexport const cloudSettings: CloudSettings = {\n  core: {\n    app_id: '11b73261',\n  },\n};\n\n@NgModule({\n  declarations: [\n    MyApp,\n    AboutPage,\n    ContactPage,\n    HomePage,\n    TabsPage,\n    LoginPage,\n    NewMessageModal,\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp, {}, \n{\n  links: [\n    { loadChildren: '../pages/login/login.module#LoginPageModule', name: 'LoginPage', segment: 'login', priority: 'low', defaultHistory: [] }\n  ]\n}),\n    ApolloModule.forRoot(provideClient),\n    CloudModule.forRoot(cloudSettings),\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    AboutPage,\n    ContactPage,\n    HomePage,\n    TabsPage,\n    LoginPage,\n    NewMessageModal,\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { TabsPage } from '../pages/tabs/tabs';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = TabsPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-about',\n  templateUrl: 'about.html'\n})\nexport class AboutPage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/about/about.ts"],"sourceRoot":""}